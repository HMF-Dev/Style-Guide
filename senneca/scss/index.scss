@use "sass:map";


// General Imports // 
    // Abstracts
@use '../../general/scss/abstracts/colors' as g-colors;
@use '../../general/scss/abstracts/fonts' as g-fonts;
    // Objects
@use '../../general/scss/components/grids' as g-grids;
@use '../../general/scss/components/indicators' as g-indicators;
@use '../../general/scss/components/containers' as g-containers;
@use '../../general/scss/components/tables' as g-tables;
    // Animations
@use '../../general/scss/animations/complex' as g-complex;
@use '../../general/scss/animations/translate' as g-translate;
@use '../../general/scss/animations/rotate' as g-rotate;
@use '../../general/scss/animations/scale' as g-scale;
@use '../../general/scss/animations/base' as g-animations-base;
    // Index
@use '../../general/scss/index' as g-index;
//


// Organization Imports //
    // Abstracts
@use 'abstracts/colors' as o-colors;
@use 'abstracts/fonts' as o-fonts;
    // Objects
@use 'components/containers' as o-containers;
@use 'components/tables' as o-tables;
    // Animations
@use 'animations/translate' as o-translate;
@use 'animations/rotate' as o-rotate;
@use 'animations/scale' as o-scale;
//

//----------------------------------------//


// :root css variables
@include g-index.root-base();
//


// All Grids
    // Symmetric Grids
@include g-grids.grid-symmetric('.grid-sym-2x1', 2, 1);
    // Custom Grids
//


h2:hover, h3:hover, h4:hover {
    @include g-complex.shift-shrink-right(30px);
}



.test2:hover {
    animation: t1 20s ease forwards;
}

$stp: 0%, 20%, 100%;
$anm: translate(0px, 0px), translate3d(300px, 50%, 3em) scaleX(4) rotateX(360deg) rotateY(360deg), translate(300px, 200px) scaleX(0) rotateX(360deg) rotateY(360deg);
@include g-animations-base.multi-part("t1", $stp, $anm);


.grid-sym-2x1 {
    grid-gap: 0px;
    //overflow: clip;
}

.card:hover {
    @extend .pulse-20;
}


#div_1 {
    background: o-colors.$grey;
    position: relative;
    display: block;
    width: 500px;
    height: 400px;
}


@include g-indicators.loader-spin-2x('.loader', 6rem, rgba(0, 128, 0, 0.5), rgba(48, 53, 51, 0.5));

.loader {
    @extend .spinning-right;
    div {
        @extend .spinning-right;
    }
};

/*
.loader {
    display: flex;
    width: 50px;
    height: 50px;
    border: 6px solid transparent;
    border-top: 6px solid o-colors.$blue; 
    border-bottom: 6px solid o-colors.$blue; 
    border-radius: 50%;
    justify-content: center;
    align-items: center;
    @extend .spinning-left; 
    div {
        border-radius: 50%;
        width: 35px;
        height: 35px;
        border: 6px solid transparent;
        border: 6px solid transparent;
        border-left: 6px solid o-colors.$grey-dark ; 
        border-right: 6px solid o-colors.$grey-dark ;
        @extend .spinning-left; 
    }
}
*/


p {
    display: block;
    position: absolute;
}


table {


    thead {
        background: o-colors.$grey-dark;
        color: white;
        
        th {
            padding: 5px;
        }
    }

    input {
        background: inherit;
        color: inherit;
    }
    @include g-tables.table-body(o-colors.$odd-row, o-colors.$even-row, o-colors.$blue);

    text-align: center;
}

table {
    border-collapse: collapse;
}

tbody tr {
    border-top: 1px solid o-colors.$grey-dark;
    border-bottom: 1px solid o-colors.$grey-dark;
}





.h1 {
    color: o-colors.$blue;
    font-size: map.get(o-fonts.$size, "lg");
    @include g-fonts.grad-main(280deg, o-colors.$blue, o-colors.$grey-light); 
}

.h2, .h3, .h4 {
    color: o-colors.$grey-dark;
    max-width: 150px; 
}





// Rotation animations
.spinning-left {
    @include g-rotate.spinning-left();
}
.spinning-right {
    @include g-rotate.spinning-right();
}



.rotate-left-90 {
    @include g-rotate.rotate-left-90();
}
.rotate-left-180 {
    @include g-rotate.rotate-left-180();
}
.rotate-left-270 {
    @include g-rotate.rotate-left-270();
}
.rotate-left-360 {
    @include g-rotate.rotate-left-360();
}



.rotate-right-90 {
    @include g-rotate.rotate-right-90();
}
.rotate-right-180 {
    @include g-rotate.rotate-right-180();
}
.rotate-right-270 {
    @include g-rotate.rotate-right-270();
}
.rotate-right-360 {
    @include g-rotate.rotate-right-360();
}

// Scale animations
.pulse-20 {
    @include g-scale.pulse-20();
}